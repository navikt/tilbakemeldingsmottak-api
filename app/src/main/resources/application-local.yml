spring:
  config:
    activate:
      on-profile: local
  flyway:
    enabled: true
    outOfOrder: false
    table: schema_version
    validateOnMigrate: true
    validateMigrationNaming: true
  jpa:
    open-in-view: false
    properties:
      hibernate:
        event:
          merge:
            entity_copy_observer: allow
        generate_statistics: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://localhost:5430/postgres?user=postgres&password=postgres
  security:
    oauth2:
      resourceserver:
        jwt:
          # Spring Boot does not support auto-configuration with multiple issuers directly. Need to configure manually.
      client:
        registration:
          pdl:
            client-id: fake
            client-secret: someSecret
            authorization-grant-type: client_credentials
            scope: scope
          arkiv:
            client-id: fake
            client-secret: someSecret
            authorization-grant-type: client_credentials
            scope: scope
          oppgave:
            client-id: fake
            client-secret: someSecret
            authorization-grant-type: client_credentials
            scope: scope
          saf-obo:
            client-id: fake
            client-secret: someSecret
            authorization-grant-type: client_credentials
            scope: scope

        provider:
          pdl:
            token-uri: http://localhost:6969/fake/token
          arkiv:
            token-uri: http://localhost:6969/fake/token
          oppgave:
            token-uri: http://localhost:6969/fake/token
          saf-obo:
            token-uri: http://localhost:6969/fake/token

auth:
  issuers:
    azuread:
      issuer-uri: http://localhost:6969/azuread
      jwk-set-uri: http://localhost:6969/azuread/.well-known/openid-configuration
    tokenx:
      issuer-uri: http://localhost:6969/tokenx
      jwk-set-uri: http://localhost:6969/tokenx/.well-known/openid-configuration


norg2:
  api:
    v1:
      url: http://localhost:8094/norg2/api/v1

oppgave_oppgaver_url: http://localhost:8093/api/v1/oppgaver

saf:
  graphql:
    url: http://localhost:8095/safgraphql

hentdokument:
  url: http://localhost:8095/rest/hentdokument

graphql:
  endpoint:
    url: ${pdl.url}

pdl:
  url: http://localhost:8096/pdlgraphql

ereg.api.url: http://localhost:8097/ereg

Journalpost_v1_url: http://localhost:8092/rest/journalpostapi/v1

email_from_address: srvtilbakemeldings@trygdeetaten.no
email_nav_support_address: nav-support@trygdeetaten.no
email_samisk_kontakt_address: samisk-kontakt@trygdeetaten.no
email_serviceklage_address: nav-serviceklager@trygdeetaten.no

gcp_team_project_id: gcp-team-project-id
big_query_dataset: dataset

log_url: "https://logs.adeo.no"

retry-config:
    send-mail:
        max-attempts: 5
        delay: 1000
        multiplier: 1.5

aad:
  authority: authority
  clientId: 1111199999
  clientSecret: secret
  email: srvtilbakemeldings@trygdeetaten.no
  tenant: tenant

cron:
    deleteBigQueryServiceKlagerScheduled: "0 0 0 * * *" # midnight every day
    deleteServiceKlagerScheduled: "0 0 0 * * *" # midnight every day
    deleteBigQueryServiceKlagerOlderThan: 7 # days
    deleteServiceKlagerOlderThan: 90 # days (3 months)

no.nav.security:
  jwt:
    client:
      registration:
        arkiv:
          token-endpoint-url: http://localhost:6969/fake/token
          grant-type: client_credentials
          scope: ${DOKARKIV_SCOPE}
          authentication:
            client-id: fake
            client-secret: someSecret
            client-auth-method: client_secret_basic

        saf-maskintilmaskin:
          token-endpoint-url: http://localhost:6969/fake/token
          grant-type: client_credentials
          scope: ${SAF_SCOPE}
          authentication:
            client-id: fake
            client-secret: someSecret
            client-auth-method: client_secret_basic

        oppgave:
          token-endpoint-url: http://localhost:6969/fake/token
          grant-type: client_credentials
          scope: ${OPPGAVE_SCOPE}
          authentication:
            client-id: fake
            client-secret: someSecret
            client-auth-method: client_secret_basic

        pdl:
          token-endpoint-url: http://localhost:6969/fake/token
          grant-type: client_credentials
          scope: ${PDL_SCOPE}
          authentication:
            client-id: fake
            client-secret: someSecret
            client-auth-method: client_secret_basic

    issuer:
      azuread:
        discovery-url: http://localhost:6969/azuread/.well-known/openid-configuration
        accepted-audience: azuread-client-id
      tokenx:
        discovery-url: http://localhost:6969/tokenx/.well-known/openid-configuration
        accepted-audience: tokenx-client-id
