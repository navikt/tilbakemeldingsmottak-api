spring:
  config:
    activate:
      on-profile: nais
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}
  flyway:
    enabled: true
    out-of-order: false
    table: schema_version
    validate-on-migrate: false
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        event:
          merge:
            entity_copy_observer: allow
        generate_statistics: false
  main:
    banner-mode: 'off'
  transaction:
    default-timeout: 300s

logging:
  config: classpath:logback-spring.xml
  level:
    org:
      springframework:
        boot:
          autoconfigure: ERROR

hentdokument:
  url: ${SAF_HENTDOKUMENT_URL}
saf:
  graphql:
    url: ${SAF_URL}
aad:
  authority: ${AAD_AUTHORITY}
  clientId:  ${AZURE_APP_CLIENT_ID}
  clientSecret:  ${AZURE_APP_CLIENT_SECRET}
  serviceuser: ${SERVICEUSER_EMAIL}
  password: ${serviceuser.password}
  tenant: ${TENANT}

no.nav.security.jwt:
  client:
    registration:
      serviceuser:
        authentication:
          client-auth-method: client_secret_basic
          client-id: ${serviceuser.username}
          client-secret: ${serviceuser.password}
        grant-type: client_credentials
        scope: openid
        token-endpoint-url: ${SECURITY_TOKEN_SERVICE_TOKEN_URL}

  issuer:
    azuread:
      accepted-audience: ${AZURE_APP_CLIENT_ID}
      cookie-name: azuread-idtoken
      discovery-url: ${AZURE_APP_WELL_KNOWN_URL}
    isso:
      accepted-audience: ${LOGINSERVICE_ACCEPTED_AUDIENCE}
      cookie-name: isso-idtoken
      discovery-url: ${NO_NAV_SECURITY_JWT_ISSUER_ISSO_DISCOVERYURL}
